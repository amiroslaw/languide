# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/lang
spring.datasource.username=postgres
spring.datasource.password=pass

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.generate-ddl=true
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application, However, in testing or production databases, you will want to use the validate
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=validate

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect